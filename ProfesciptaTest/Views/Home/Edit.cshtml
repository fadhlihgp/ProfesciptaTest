@{
    ViewData["PageTitle"] = "Edit - Sales Order";
    ViewData["Title"] = "Edit - Sales Order";
}
@model ProfesciptaTest.ViewModels.SoOrderResponseVM

<style>
        .table th {
            background-color: #003366;
            text-align: center;
            color: white;
        }
        .table td {
            background-color: #ffffff;
            text-align: center;
        }
        .pagination {
            justify-content: end;
        }
</style>

<div class="w-100 mt-2 gap-3">
    <form id="itemSave">
        <div class="w-100 flex-column justify-content-center align-items-center">
            <div class="w-100 text-center p-2" style="background-color: #1E3E62">
                <span class="fw-bold text-white fs-5">Sales Order Information</span>
            </div>
            <div class="row flex-row justify-content-between mt-4 align-items-center gap-2" style="padding-left: 10rem; padding-right: 10rem">
                <div class="col-md-5">
                    <div class="row mb-3">
                        <label for="orderNumber" class="col-sm-4 fs-6 col-form-label">Sales Order Number</label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control" id="orderNumber" asp-for="OrderNo">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="orderdate" class="col-sm-4 col-form-label">Order Date</label>
                        <div class="col-sm-8">
                            <input type="date" class="form-control" id="orderdate" asp-for="OrderDate">
                        </div>
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="row mb-3">
                        <label for="customerId" class="col-sm-2 col-form-label">Customer</label>
                        <div class="col-sm-10">
                            <select class="form-select" id="customerId" aria-label="Default select example" asp-for="ComCustomerId">
                                <option selected>Select Customer</option>
                                @{
                                    @foreach (var customer in ViewBag.Customers)
                                    {
                                        <option value="@customer.ComCustomerId">@customer.CustomerName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="address" class="col-sm-2 col-form-label">Address</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" id="address" asp-for="Address"></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="w-100 flex-column justify-content-center align-items-center">
            <div class="w-100 text-center p-2" style="background-color: #1E3E62">
                <span class="fw-bold text-white fs-5">Detail Item Information</span>
            </div>
            <div class="w-100 flex-column px-4 gap-2 mt-2">
                <button id="addItem" type="button" class="btn rounded text-white mb-2" style="background-color: #A0153E" data-bs-toggle="modal" data-bs-target="#itemModal">Add Item</button>

                <!-- Table -->
                <table class="table table-striped table-bordered">
                    <thead>
                    <tr>
                        <th>No</th>
                        <th>Action</th>
                        <th>Item Name</th>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>Total</th>
                    </tr>
                    </thead>
                    <tbody id="itemList">
                    @for (var i = 0; i < Model.Items.Count(); i++)
                    {
                        <tr>
                            <td>@(i + 1)</td>
                            <td class="d-flex justify-content-center gap-2">
                                <button type="button" class="btn btn-link p-0 editItem" data-index="@(i)" data-bs-toggle="modal" data-bs-target="#itemModal"><img src="/icons/edit.png" alt="edit" width="24"></button>
                                <button type="button" class="btn btn-link p-0 deleteItem" data-index="@(i)"><img src="/icons/trash.png" alt="delete" width="20"></button>
                            </td>
                            <td>@Model.Items.ToList()[i].ItemName</td>
                            <td>@Model.Items.ToList()[i].Quantity</td>
                            <td>@Model.Items.ToList()[i].Price</td>
                            <td>@Model.Items.ToList()[i].Total</td>
                        </tr>
                    }
                    @* <tr> *@
                    @*     <td colspan="6"> *@
                    @*         <!-- Pagination --> *@
                    @*         <nav aria-label="Page example" class="d-flex justify-content-between px-0"> *@
                    @*             <ul class="pagination justify-content-start"> *@
                    @*                 <li class="page-item"><a class="page-link" href="#">«</a></li> *@
                    @*                 <li class="page-item"><a class="page-link" href="#">1</a></li> *@
                    @*                 <li class="page-item"><a class="page-link" href="#">2</a></li> *@
                    @*                 <li class="page-item"><a class="page-link" href="#">3</a></li> *@
                    @*                 <li class="page-item"><a class="page-link" href="#">»</a></li> *@
                    @*             </ul> *@
                    @*             <div> *@
                    @*                 <span class="text-end">1 - 10 of 28 items</span> *@
                    @*             </div> *@
                    @*         </nav> *@
                    @*     </td> *@
                    @* </tr> *@
                    </tbody>
                </table>
            </div>
        </div>

        <div class="w-100 d-flex justify-content-center align-items-center gap-2">
            <button type="submit" class="btn rounded text-white" style="background-color: #A0153E">Save</button>
            <a href="/" class="btn rounded text-white" style="background-color: #10375C">Close</a>
        </div>
    </form>
</div>

<!-- Bootstrap Modal for Add/Edit Item -->
<div class="modal fade" id="itemModal" tabindex="-1" aria-labelledby="itemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="itemModalLabel">Add/Edit Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="itemForm">
                    <input type="text" hidden id="idItem"/>
                    <div class="mb-3">
                        <label for="itemName" class="form-label">Item Name</label>
                        <input type="text" class="form-control" id="itemName" required>
                    </div>
                    <div class="mb-3">
                        <label for="itemQuantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="itemQuantity" required>
                    </div>
                    <div class="mb-3">
                        <label for="itemPrice" class="form-label">Price</label>
                        <input type="number" class="form-control" id="itemPrice" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveItem">Save Item</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Konfirmasi Delete -->
<div class="modal fade" id="deleteConfirmationModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-body flex-column justify-content-center align-items-center gap-2 w-100">
                            <div class="fw-bold fs-5 text-center">Do You Want to Delete ?</div>
                        </div>
                        <div class="modal-footer d-flex justify-content-center gap-2">
                            <button type="button" class="btn text-white" style="background-color: #c6bb33" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" id="confirmDelete"class="btn btn-primary">Delete</button>
                            @* <button type="button" class="btn btn-primary">Yes</button> *@
                            @* <button type="button" class="btn text-white" style="background-color: #c6bb33" data-bs-dismiss="modal">No</button> *@
                        </div>
                    </div>
                </div>
            </div>
<script>
$( document ).ready(function() {
        let itemIndex = 0;
        let items = @Html.Raw(Json.Serialize(Model.Items));
        let deletedItemIds = [];
        let itemToDeleteIndex = null;
        console.log(items);
        let orderId = @Html.Raw(ViewBag.OrderId);
        
        function renderItems() {
                    const itemList = $('#itemList');
                    itemList.empty();
                    items.forEach((item, index) => {
                        itemList.append(`
                            <tr data-index="${index}">
                                <td>${index + 1}</td>
                                <td class="d-flex justify-content-center gap-2">
                                    <button type="button" class="btn btn-link p-0 editItem" data-index="${index}" data-bs-toggle="modal" data-bs-target="#itemModal"><img src="/icons/edit.png" alt="edit" width="24"></button>
                                    <button type="button" class="btn btn-link p-0 deleteItem" data-index="${index}"><img src="/icons/trash.png" alt="delete" width="20"></button>
                                </td>
                                <td>${item.itemName}</td>
                                <td>${item.quantity}</td>
                                <td>${item.price}</td>
                                <td>${item.total}</td>
                            </tr>
                        `);
                    });
                }
        // function renderItems() {
        //     let amount = 0;
        //     let total = 0;
        //     const itemList = $('#itemList');
        //     itemList.empty();
        //     items.forEach((item, index) => {
        //         total = item.Quantity * item.Price;
        //         itemList.append(`
        //             <tr>
        //                 <td>${index + 1}</td>
        //                 <td class="d-flex justify-content-center gap-2">
        //                     <button class="btn btn-link p-0 editItem" data-index="${index}" data-bs-toggle="modal" data-bs-target="#itemModal"><img src="/icons/edit.png" alt="edit" width="24"></button>
        //                     <button class="btn btn-link p-0 deleteItem" data-index="${index}"><img src="/icons/trash.png" alt="delete" width="20"></button>
        //                 </td>
        //                 <td>${item.itemName}</td>
        //                 <td>${item.Quantity}</td>
        //                 <td>${item.Price}</td>
        //                 <td>${total}</td>
        //             </tr>
        //         `);
        //         amount += total;
        //     });
        //     itemList.append(`
        //     <tr>
        //         <td colspan="6" class="text-end fw-bold">
        //             <span class="me-4">Total Item : ${items.length}</span>
        //             <span>Total Amount : ${amount}</span>
        //         </td>
        //     </tr>
        //     `);
        // }
    
        // Add or Edit Item
            $('#saveItem').click(function () {
                // console.log("Klik save");
                const itemName = $('#itemName').val();
                const itemQuantity = parseInt($('#itemQuantity').val());
                const itemPrice = parseFloat($('#itemPrice').val());
                const itemId = parseInt($('#idItem').val());
                console.log('item id ' + itemId);
                const item = {
                    itemName: itemName,
                    quantity: itemQuantity,
                    price: itemPrice,
                    total: itemQuantity * itemPrice,
                    soItemId: itemId
                };
        
                if (currentEditIndex === -1) {
                    // Add new item
                    items.push(item);
                } else {
                    // Edit existing item
                    items[currentEditIndex] = item;
                }
        
                // Close the modal
                $('#itemModal').modal('hide');
        
                // Reset form
                $('#itemForm')[0].reset();
        
                // Render updated list of items
                renderItems();
            });
        
        // Open modal for editing
            $(document).on('click', '.editItem', function () {
                currentEditIndex = $(this).data('index');
                const item = items[currentEditIndex];
                console.log(item);
                // Populate modal fields with current item values
                $('#itemName').val(item.itemName);
                $('#itemQuantity').val(item.quantity);
                $('#itemPrice').val(item.price);
                $('#idItem').val(item.soItemId ?? '0');
            });
            
            $(document).on('click', '.deleteItem', function() {
                itemToDeleteIndex = $(this).data('index'); // Simpan index item yang akan dihapus
                $('#deleteConfirmationModal').modal('show'); // Tampilkan modal konfirmasi
            });

            $('#confirmDelete').click(function() {
                const itemId = items[itemToDeleteIndex].soItemId;
                if (itemId) deletedItemIds.push(itemId); // Simpan ID item yang dihapus jika item ada di database
        
                items.splice(itemToDeleteIndex, 1); // Hapus item dari array temporary
                renderItems(); // Render ulang tabel
                $('#deleteConfirmationModal').modal('hide'); // Tutup modal setelah konfirmasi
            });
            
            // Menampilkan modal delete
            $(document).on('click', '.deleteItem', function() {
                itemToDeleteIndex = $(this).data('index'); // Simpan index item yang akan dihapus
                $('#deleteConfirmationModal').modal('show'); // Tampilkan modal konfirmasi
            });
        
            // Reset current edit index when adding a new item
            $('#addItem').click(function () {
                currentEditIndex = -1;
                $('#itemForm')[0].reset(); // Clear modal input fields
            });
    
    
        $('#itemSave').submit(function (e) {
            e.preventDefault();
            const data = {
                orderNo: $("#orderNumber").val(),
                orderDate: $("#orderdate").val(),
                comCustomerId: $("#customerId").val(),
                address: $("#address").val(),
                items: items,
                deleteItemIds: deletedItemIds
            }
            
            console.log(data)
            $.ajax({
                url: window.location.origin + `/api/EditOrder/${orderId}`,
                method: 'Put',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function(response) {
                    window.location.href = '/';
                },
                error: function(error) {
                    console.log(error)
                  alert("Gagal menyimpan data");
                }
            })
        });
});
</script>